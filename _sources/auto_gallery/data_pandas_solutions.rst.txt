
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery/data_pandas_solutions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery_data_pandas_solutions.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_data_pandas_solutions.py:


Exercises: Pandas: data manipulation
------------------------------------

Data Frame
~~~~~~~~~~

1. Read the iris dataset at 'https://github.com/duchesnay/pystatsml/raw/master/datasets/iris.csv'

2. Print column names

3. Get numerical columns

4. For each species compute the mean of numerical columns and store it in  a ``stats`` table like:

::

          species  sepal_length  sepal_width  petal_length  petal_width
    0      setosa         5.006        3.428         1.462        0.246
    1  versicolor         5.936        2.770         4.260        1.326
    2   virginica         6.588        2.974         5.552        2.026

.. GENERATED FROM PYTHON SOURCE LINES 25-85




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    setosa
    versicolor
    virginica
          species  sepal_length  sepal_width  petal_length  petal_width
    0      setosa         5.006        3.428         1.462        0.246
    1  versicolor         5.936        2.770         4.260        1.326
    2   virginica         6.588        2.974         5.552        2.026
    /home/ed203246/git/pystatsml/data_manipulation/data_pandas_solutions.py:55: FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!
    You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.
    A typical example is when you are setting values in a column of a DataFrame, like:

    df["col"][row_indexer] = value

    Use `df.loc[row_indexer, "col"] = values` instead, to perform the assignment in a single step and ensure this keeps updating the original `df`.

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

      df["petal_width"][df["petal_width"].isnull()] = \
    /home/ed203246/git/pystatsml/data_manipulation/data_pandas_solutions.py:55: SettingWithCopyWarning: 
    A value is trying to be set on a copy of a slice from a DataFrame

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      df["petal_width"][df["petal_width"].isnull()] = \
    1 a 1
    2 b 2






|

.. code-block:: Python


    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt


    url = 'https://github.com/duchesnay/pystatsml/raw/master/datasets/iris.csv'
    df = pd.read_csv(url)

    num_cols = df._get_numeric_data().columns

    stats = list()

    for grp, d in df.groupby("species"):
        print(grp)
        #print()
        stats.append( [grp] + d.loc[:, num_cols].mean(axis=0).tolist())

    stats = pd.DataFrame(stats, columns=["species"] + num_cols.tolist())
    print(stats)

    # or
    df.groupby("species").mean()

    ##

    df.loc[[0, 1] ,"petal_width"] = None

    df.petal_width

    df["petal_width"][df["petal_width"].isnull()] = \
        df["petal_width"][df["petal_width"].notnull()].median()


    #

    l = [(1, "a", 1), (2, "b", 2)]

    for x, y, z in l:
        print(x, y, z)






















.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.419 seconds)


.. _sphx_glr_download_auto_gallery_data_pandas_solutions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: data_pandas_solutions.ipynb <data_pandas_solutions.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: data_pandas_solutions.py <data_pandas_solutions.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: data_pandas_solutions.zip <data_pandas_solutions.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
